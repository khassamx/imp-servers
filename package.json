{
  "name": "imp-servers",
  "version": "1.0.0",
  "description": "Servidor de Chat IMP: Backend robusto y de alto rendimiento con Express, Traducci√≥n, almacenamiento JSON, y estilo retro Pixel Art. Configuraci√≥n de Calidad de Software, Cero Vulnerabilidades y CI/CD lista.",
  
  "main": "server.js",
  "private": true, 
  
  /* ================================== */
  /* ======= ‚öôÔ∏è CONFIGURACI√ìN ENTORNO ===== */
  /* ================================== */
  "engines": {
    "node": ">=18.0.0", /* Asegura el uso de m√≥dulos modernos */
    "npm": ">=8.0.0"   /* M√≠nimo de NPM para auditor√≠a avanzada */
  },
  
  /* ================================== */
  /* ======= üõ°Ô∏è SCRIPTS DE ACCI√ìN ESTRICTA ======= */
  /* ================================== */
  "scripts": {
    /* --- Arranque & Desarrollo --- */
    "start": "NODE_ENV=production node server.js", /* Modo producci√≥n estricto */
    "dev": "nodemon server.js", /* Desarrollo con recarga autom√°tica */
    
    /* --- Instalaci√≥n y Limpieza --- */
    "postinstall": "npm run security:audit", /* Ejecutar auditor√≠a DESPU√âS de instalar */
    "clean": "rm -rf node_modules package-lock.json .eslintcache",
    "reinstall": "npm run clean && npm install",
    "upgrade": "npm update --save", /* Actualizaci√≥n de dependencias segura */

    /* --- Testing & Seguridad de C√≥digo --- */
    "security:audit": "npm audit --audit-level=high || echo 'Vulnerabilidades encontradas. Por favor, rev√≠selas.'",
    "test:smoke": "echo 'Testing de Servicio (Simulaci√≥n)...' && curl --fail http://localhost:3000 || (echo '‚ùå ERROR: Servidor no responde' && exit 1)",
    "test": "npm run format:check && npm run lint && npm run security:audit && npm run test:smoke",
    
    /* --- Calidad y Formato Estricto --- */
    "lint": "eslint \"**/*.js\"", /* Linting en todos los archivos JS */
    "lint:fix": "eslint \"**/*.js\" --fix", /* Auto-correcci√≥n del linter */
    "format": "prettier --write \"**/*.{js,json,html,css,md}\"", /* Formato autom√°tico */
    "format:check": "prettier --check \"**/*.{js,json,html,css,md}\"", /* Chequeo de formato */
    
    /* --- Hooks de Git (Para CI/CD y Calidad) --- */
    "pre-commit": "npm run lint && npm run format:check" /* Forzar chequeos antes del commit */
  },

  /* ================================== */
  /* ======= üì¶ DEPENDENCIAS M√çNIMAS (PROD) === */
  /* ================================== */
  "dependencies": {
    "body-parser": "^1.20.2",
    "express": "^4.19.2",
    "path": "^0.12.7",
    "translate": "^3.0.0"
  },
  
  /* ================================== */
  /* ======= üõ†Ô∏è HERRAMIENTAS DEV (CALIDAD) ==== */
  /* ================================== */
  "devDependencies": {
    "nodemon": "^3.1.4",
    "eslint": "^8.57.0",
    "prettier": "^3.3.3", /* Formateador de c√≥digo */
    "husky": "^9.0.11", /* Gestor de Hooks de Git */
    "curl": "^0.4.0" /* Para el smoke test */
  },

  /* ================================== */
  /* ======= üìù CONFIGURACI√ìN ESLINT (Para linting) ==== */
  /* ================================== */
  "eslintConfig": {
    "env": {
      "node": true,
      "es2021": true,
      "browser": true
    },
    "extends": "eslint:recommended",
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "rules": {
      "no-console": "warn", /* No permitir console.log en producci√≥n */
      "indent": ["error", 2],
      "semi": ["error", "always"]
    }
  },
  
  /* ================================== */
  /* ======= üíÖ CONFIGURACI√ìN PRETTIER (Para formato) == */
  /* ================================== */
  "prettier": {
    "semi": true,
    "singleQuote": false,
    "tabWidth": 2,
    "trailingComma": "all"
  },
  
  /* ================================== */
  /* ======= üêï CONFIGURACI√ìN HUSKY (Hooks de Git) ==== */
  /* ================================== */
  "husky": {
    "hooks": {
      "pre-commit": "npm run pre-commit"
    }
  }
}